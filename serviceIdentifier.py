#function to identify the services
#Identify services from serviceIdentifier.py
import nmap


def identifyServices(target, port):
  #make scanner
  scanner = nmap.PortScanner()
  #do a scan
  results = scanner.scan(target, str(port))
  #fetch the service names
  service = results['scan'][target]['tcp'][int(port)]['name']
  product = results['scan'][target]['tcp'][int(port)]['product']
  version = results['scan'][target]['tcp'][int(port)]['version']
  cpe = results['scan'][target]['tcp'][int(port)]['cpe']
  return [service, product, version, cpe]

# example output
# {'nmap': {'command_line': 'nmap -oX - -p 22 -sV 192.168.1.5', 'scaninfo': {'tcp': {'method': 'connect', 'services': '22'}}, 'scanstats': {'timestr': 'Wed Jan 10 22:03:53 2024', 'elapsed': '0.30', 'uphosts': '1', 'downhosts': '0', 'totalhosts': '1'}}, 'scan': {'192.168.1.5': {'hostnames': [{'name': '', 'type': ''}], 'addresses': {'ipv4': '192.168.1.5'}, 'vendor': {}, 'status': {'state': 'up', 'reason': 'syn-ack'}, 'tcp': {22: {'state': 'open', 'reason': 'syn-ack', 'name': 'ssh', 'product': 'OpenSSH', 'version': '9.4p1 Debian 1', 'extrainfo': 'protocol 2.0', 'conf': '10', 'cpe': 'cpe:/o:linux:linux_kernel'}}}}}
# res = identifyServices('192.168.1.5', 80)
# print(res)